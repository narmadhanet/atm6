@model MVCDemo.Models.Driver
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Driver</h4>

    <hr />

    <div class="form-group">
        @Html.LabelFor(x => x.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x=>x.Name,"",new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ReTypeEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.ReTypeEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.ReTypeEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Phone, "", new { @class = "text-danger" })

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(x => x.LicenseID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.LicenseID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.LicenseID, "", new { @class = "text-danger" })

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(x => x.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Address, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Age, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(x => x.Age, "", new { @class = "text-danger" })
        </div>
    </div>   <div class="form-group">
        @Html.LabelFor(x => x.DateOfExpiry, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(x => x.DateOfExpiry, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(x => x.DateOfExpiry, "", new { @class = "text-danger" })

                 </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary"/>
    </div>
    </div>
</div>

}

<div>
    @Html.ActionLink("Back to list","Index")
</div>



